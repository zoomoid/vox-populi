// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PollsColumns holds the columns for the "polls" table.
	PollsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "is_live", Type: field.TypeBool, Default: false},
		{Name: "can_vote", Type: field.TypeBool, Default: true},
		{Name: "can_react", Type: field.TypeBool, Default: true},
		{Name: "can_see_results", Type: field.TypeBool, Default: true},
		{Name: "published_at", Type: field.TypeTime},
		{Name: "unpublished_at", Type: field.TypeTime},
	}
	// PollsTable holds the schema information for the "polls" table.
	PollsTable = &schema.Table{
		Name:       "polls",
		Columns:    PollsColumns,
		PrimaryKey: []*schema.Column{PollsColumns[0]},
	}
	// ReactionsColumns holds the columns for the "reactions" table.
	ReactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "poll_reactions", Type: field.TypeInt, Nullable: true},
		{Name: "reaction_template", Type: field.TypeInt},
	}
	// ReactionsTable holds the schema information for the "reactions" table.
	ReactionsTable = &schema.Table{
		Name:       "reactions",
		Columns:    ReactionsColumns,
		PrimaryKey: []*schema.Column{ReactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reactions_polls_reactions",
				Columns:    []*schema.Column{ReactionsColumns[3]},
				RefColumns: []*schema.Column{PollsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "reactions_reaction_templates_template",
				Columns:    []*schema.Column{ReactionsColumns[4]},
				RefColumns: []*schema.Column{ReactionTemplatesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ReactionTemplatesColumns holds the columns for the "reaction_templates" table.
	ReactionTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "reaction", Type: field.TypeString},
		{Name: "poll_reaction_templates", Type: field.TypeInt, Nullable: true},
	}
	// ReactionTemplatesTable holds the schema information for the "reaction_templates" table.
	ReactionTemplatesTable = &schema.Table{
		Name:       "reaction_templates",
		Columns:    ReactionTemplatesColumns,
		PrimaryKey: []*schema.Column{ReactionTemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reaction_templates_polls_reaction_templates",
				Columns:    []*schema.Column{ReactionTemplatesColumns[4]},
				RefColumns: []*schema.Column{PollsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VotesColumns holds the columns for the "votes" table.
	VotesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "deleted_at", Type: field.TypeTime},
		{Name: "nonce", Type: field.TypeString},
		{Name: "poll_votes", Type: field.TypeInt, Nullable: true},
		{Name: "vote_template", Type: field.TypeInt},
	}
	// VotesTable holds the schema information for the "votes" table.
	VotesTable = &schema.Table{
		Name:       "votes",
		Columns:    VotesColumns,
		PrimaryKey: []*schema.Column{VotesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "votes_polls_votes",
				Columns:    []*schema.Column{VotesColumns[6]},
				RefColumns: []*schema.Column{PollsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "votes_vote_templates_template",
				Columns:    []*schema.Column{VotesColumns[7]},
				RefColumns: []*schema.Column{VoteTemplatesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// VoteTemplatesColumns holds the columns for the "vote_templates" table.
	VoteTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "answer", Type: field.TypeString},
		{Name: "poll_vote_templates", Type: field.TypeInt, Nullable: true},
	}
	// VoteTemplatesTable holds the schema information for the "vote_templates" table.
	VoteTemplatesTable = &schema.Table{
		Name:       "vote_templates",
		Columns:    VoteTemplatesColumns,
		PrimaryKey: []*schema.Column{VoteTemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vote_templates_polls_vote_templates",
				Columns:    []*schema.Column{VoteTemplatesColumns[4]},
				RefColumns: []*schema.Column{PollsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PollsTable,
		ReactionsTable,
		ReactionTemplatesTable,
		VotesTable,
		VoteTemplatesTable,
	}
)

func init() {
	ReactionsTable.ForeignKeys[0].RefTable = PollsTable
	ReactionsTable.ForeignKeys[1].RefTable = ReactionTemplatesTable
	ReactionTemplatesTable.ForeignKeys[0].RefTable = PollsTable
	VotesTable.ForeignKeys[0].RefTable = PollsTable
	VotesTable.ForeignKeys[1].RefTable = VoteTemplatesTable
	VoteTemplatesTable.ForeignKeys[0].RefTable = PollsTable
}
